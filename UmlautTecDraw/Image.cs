///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace UmlautTecDraw
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Image recording.
    /// </summary>
    [TestModule("e3bce58e-bb91-40cd-a968-875bd2829329", ModuleType.Recording, 1)]
    public partial class Image : ITestModule
    {
        /// <summary>
        /// Holds an instance of the UmlautTecDrawRepository repository.
        /// </summary>
        public static UmlautTecDrawRepository repo = UmlautTecDrawRepository.Instance;

        static Image instance = new Image();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Image()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Image Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWin.Canvas1.CanvasCtrl' at 11;10.", repo.MainWin.Canvas1.CanvasCtrlInfo, new RecordItemIndex(0));
            repo.MainWin.Canvas1.CanvasCtrl.Click(new Location(CanvasCtrl_Screenshot9, "11;10", CanvasCtrl_Screenshot9_Options));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWin.Canvas1.CanvasCtrl' at 7;10.", repo.MainWin.Canvas1.CanvasCtrlInfo, new RecordItemIndex(1));
            repo.MainWin.Canvas1.CanvasCtrl.Click(new Location(CanvasCtrl_Screenshot10, "7;10", CanvasCtrl_Screenshot10_Options));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWin.Canvas1.CanvasCtrl' at 5;14.", repo.MainWin.Canvas1.CanvasCtrlInfo, new RecordItemIndex(2));
            repo.MainWin.Canvas1.CanvasCtrl.Click(new Location(CanvasCtrl_Screenshot11, "5;14", CanvasCtrl_Screenshot11_Options));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'MainWin.Canvas1.CanvasCtrl' at 7;16.", repo.MainWin.Canvas1.CanvasCtrlInfo, new RecordItemIndex(3));
            repo.MainWin.Canvas1.CanvasCtrl.Click(System.Windows.Forms.MouseButtons.Right, new Location(CanvasCtrl_Screenshot12, "7;16", CanvasCtrl_Screenshot12_Options));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage CanvasCtrl_Screenshot9
        { get { return repo.MainWin.Canvas1.CanvasCtrlInfo.GetScreenshot9(new Rectangle(362, 293, 25, 26)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions CanvasCtrl_Screenshot9_Options
        { get { return Imaging.FindOptions.Default; } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage CanvasCtrl_Screenshot10
        { get { return repo.MainWin.Canvas1.CanvasCtrlInfo.GetScreenshot10(new Rectangle(467, 201, 25, 26)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions CanvasCtrl_Screenshot10_Options
        { get { return Imaging.FindOptions.Default; } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage CanvasCtrl_Screenshot11
        { get { return repo.MainWin.Canvas1.CanvasCtrlInfo.GetScreenshot11(new Rectangle(598, 490, 12, 25)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions CanvasCtrl_Screenshot11_Options
        { get { return Imaging.FindOptions.Default; } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage CanvasCtrl_Screenshot12
        { get { return repo.MainWin.Canvas1.CanvasCtrlInfo.GetScreenshot12(new Rectangle(676, 320, 26, 25)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions CanvasCtrl_Screenshot12_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
